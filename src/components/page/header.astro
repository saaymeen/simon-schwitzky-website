---
import { Anchor } from '../astro';
import { LuArrowRight } from 'react-icons/lu/index.js';
import { getTranslation } from 'utils/i18n';

const translations = {
	de: {
		about: 'Ãœber',
		work: 'Arbeiten',
		editorial: 'Redaktion',
		contact: 'Kennenlernen',
	},
	en: { about: 'About', work: 'Work', editorial: 'Editorial', contact: 'Contact' },
};

const translation = getTranslation(Astro.currentLocale, translations);

const links = [
	{ label: translation.about, href: '#about' },
	{ label: translation.work, href: '#work' },
	{ label: translation.editorial, href: '#editorial' },
];
---

{/*<header class="fixed top-0 z-20 flex w-full bg-black px-4 py-5 text-black sm:px-12">*/}
<header class="sticky top-0 z-20 flex w-full px-4 py-5 text-black sm:px-12">
	<div class="mx-auto flex max-w-7xl flex-1 items-center">
		<span class="mr-auto flex flex-1 text-sm text-white">Simon Schwitzky</span>

		<nav class="hidden items-center text-white sm:flex">
			<ul class="flex items-center space-x-5 text-xs">
				{
					links.map((link) => (
						<li>
							<a
								href={link.href}
								class="block text-neutral-200 transition-colors hover:text-white hover:underline"
							>
								{link.label}
							</a>
						</li>
					))
				}
			</ul>
		</nav>

		<div class="ml-auto flex flex-1 justify-end">
			<Anchor icon={LuArrowRight} href="/contact"> {translation.contact} </Anchor>
		</div>
	</div>
</header>

<script>
	/*
	TODO: make this only query id #indexHeader as it will otherwise effect all headers on page elements

	const header = document.querySelector('header');
	const masthead = document.querySelector('#masthead');

	const headerFound = typeof header !== 'undefined' && header !== null;
	let headerHeight = 0;
	if (headerFound) {
		headerHeight = header.getBoundingClientRect().height;
	}

	const mastheadFound = typeof masthead !== 'undefined' && masthead !== null;

	// header is initially black, if JS is disabled site will still display well
	if (headerFound) {
		const mastheadHeight = mastheadFound ? masthead.clientHeight : window.innerHeight;

		if (window.scrollY > mastheadHeight - headerHeight) {
			header.style.backdropFilter = 'blur(4px)';
			header.style.webkitBackdropFilter = 'blur(4px)';
			header.style.backgroundColor = 'black';
		} else {
			header.style.backgroundColor = 'transparent';
			header.style.backdropFilter = '';
			header.style.webkitBackdropFilter = '';
		}
	}

	document.addEventListener('scroll', () => {
		const mastheadHeight = mastheadFound ? masthead.clientHeight : window.innerHeight;

		if (headerFound) {
			if (window.scrollY > mastheadHeight - headerHeight) {
				header.style.backdropFilter = 'blur(4px)';
				header.style.backgroundColor = 'rgba(0,0,0,0.7)';
				header.style.webkitBackdropFilter = 'blur(4px)';
			} else {
				header.style.backgroundColor = 'transparent';
				header.style.webkitBackdropFilter = '';
				header.style.backdropFilter = '';
			}
		}
	});
	*/
</script>
